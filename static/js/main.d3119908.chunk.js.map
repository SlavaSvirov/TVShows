{"version":3,"sources":["data/redux/reducer.js","data/redux/store.js","Components/TVShows/Serial/Serial.js","Components/Search/Search.js","Components/TVShows/ModalContent/ModalContent.js","Components/TVShows/TVShows.js","data/redux/actionCreators.js","data/redux/constants.js","Components/Episodes/Episode/Episode.js","Components/Episodes/Episodes.js","App/App.js","index.js","Components/Episodes/Episode/styles.module.css","Components/Episodes/styles.module.css"],"names":["initialValue","episodes","serials","reducer","state","action","type","payload","store","createStore","composeWithDevTools","applyMiddleware","thunk","Serial","name","img","rating","id","openModal","className","onClick","src","medium","alt","Search","onChange","filterByImage","placeholder","ModalContent","item","description","show","summary","replace","year","Date","premiered","toLocaleDateString","to","connect","dispatch","setSerials","items","props","React","useState","error","setError","isLoaded","setIsLoaded","filteredItems","setFilteredItems","checked","setChecked","text","setText","isModalVisible","setIsModalVisible","currentShow","setCurrentShow","useEffect","a","fetch","response","json","filter","i","lowerName","toLowerCase","image","includes","console","log","handleToggleModal","find","prevIsModalVisible","message","event","target","value","map","title","visible","onOk","onCancel","Episode","exactSummary","slice","setDescription","isRollUp","setIsRollUp","toShowRollUpBtn","length","styles","episodeContainer","everyEpisode","imageShow","cn","ellips","prevIsRollup","setEpisodes","match","params","valueFromStore","changeValue","episode","App","basename","process","exact","path","component","TVShows","Episodes","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d3119908.chunk.js","sourcesContent":["const initialValue = { episodes: [], serials: [] };\r\nconst reducer = (state = initialValue, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EPISODES\":\r\n      return {\r\n        ...state,\r\n        episodes: action.payload\r\n      };\r\n    case \"SET_SERIALS\":\r\n      return {\r\n        ...state,\r\n        serials: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./Serial.css\";\r\n\r\nfunction Serial({ name, img, rating, id, openModal }) {\r\n  return (\r\n    <div className=\"serialContainer\">\r\n      <div>\r\n        <img\r\n          className=\"showImage\"\r\n          onClick={() => openModal(id)}\r\n          src={\r\n            (img && img.medium) ||\r\n            \"https://st2.depositphotos.com/2234823/8317/i/600/depositphotos_83178060-stock-photo-digital-camera.jpg\"\r\n          }\r\n          alt={name}\r\n        />\r\n        <div>\r\n          {name} {rating}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Serial;\r\n","import React from \"react\";\r\nimport { Input, Checkbox } from \"antd\";\r\nimport \"./Search.css\";\r\n\r\nfunction Search({ onChange, filterByImage }) {\r\n  return (\r\n    <div className=\"inputBar\">\r\n      <Input\r\n        className=\"input-row\"\r\n        onChange={onChange}\r\n        placeholder=\"Введите запрос\"\r\n      />\r\n      <Checkbox className=\"checkboxCustom\" onChange={filterByImage}>\r\n        С картинками\r\n      </Checkbox>\r\n    </div>\r\n  );\r\n}\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nconst ModalContent = ({ item }) => {\r\n  const description = item.show.summary.replace(/<[^>]*>/g, \"\");\r\n  const year = new Date(item.show.premiered);\r\n\r\n  return (\r\n    <div>\r\n      <span>year: {year.toLocaleDateString(\"ru\")}</span>\r\n\r\n      <div>{description}</div>\r\n      <div className=\"btn\">\r\n        <Button type=\"primary\" onClick={() => {}}>\r\n          <NavLink to={`/episodes/${item.show.id}`}>Список серий</NavLink>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalContent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSerials } from \"../../data/redux/actionCreators\";\r\nimport { Spin, Modal } from \"antd\";\r\nimport \"./TVShows.css\";\r\nimport Serial from \"./Serial\";\r\nimport Search from \"../Search\";\r\nimport ModalContent from \"./ModalContent\";\r\n\r\nconst TVShows = (props) => {\r\n  const [error, setError] = React.useState(null);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  // const [items, setItems] = React.useState([]);\r\n  const [filteredItems, setFilteredItems] = React.useState([]);\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [text, setText] = React.useState(\"\");\r\n  const [isModalVisible, setIsModalVisible] = React.useState(false);\r\n  const [currentShow, setCurrentShow] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://api.tvmaze.com/search/shows?q=man\"\r\n        );\r\n        const items = await response.json();\r\n        props.setSerials(items);\r\n\r\n        // setItems(items);\r\n        setIsLoaded(true);\r\n        setFilteredItems(items);\r\n      } catch (error) {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const filteredItems = props.serials.filter((i) => {\r\n      const lowerName = i.show.name.toLowerCase();\r\n      if (checked && !i.show.image) {\r\n        return;\r\n      }\r\n      return lowerName.includes(text.toLowerCase());\r\n    });\r\n    console.log(filteredItems);\r\n\r\n    setFilteredItems(filteredItems);\r\n  }, [checked, text]);\r\n\r\n  const handleFilterByImg = (event) => setChecked(event.target.checked);\r\n\r\n  const handleFilterByText = (event) => setText(event.target.value);\r\n\r\n  const handleToggleModal = (id) => {\r\n    if (id) {\r\n      const currentShow = filteredItems.find((i) => i.show.id === id);\r\n      setCurrentShow(currentShow);\r\n    }\r\n    setIsModalVisible((prevIsModalVisible) => !prevIsModalVisible);\r\n  };\r\n\r\n  if (error) {\r\n    return <p>Error {error.message} </p>;\r\n  } else if (!isLoaded) {\r\n    return <Spin />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Search\r\n          onChange={handleFilterByText}\r\n          filterByImage={handleFilterByImg}\r\n        />\r\n\r\n        {filteredItems.map((item) => {\r\n          return (\r\n            <Serial\r\n              id={item.show.id}\r\n              key={item.show.id}\r\n              name={item.show.name}\r\n              img={item.show.image}\r\n              openModal={handleToggleModal}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <Modal\r\n          title=\"Описание Сериала\"\r\n          visible={isModalVisible}\r\n          onOk={handleToggleModal}\r\n          onCancel={handleToggleModal}\r\n        >\r\n          <ModalContent item={currentShow} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { serials } = state;\r\n  return {\r\n    serials,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setSerials: (items) => dispatch(setSerials(items)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TVShows);\r\n","import { SET_EPISODES, SET_SERIALS } from \"./constants\";\r\n\r\nexport const setEpisodes = payload => {\r\n  return { type: SET_EPISODES, payload };\r\n};\r\nexport const setSerials = payload => {\r\n  return { type: SET_SERIALS, payload };\r\n};\r\n","export const SET_EPISODES = \"SET_EPISODES\";\r\n\r\nexport const SET_SERIALS = \"SET_SERIALS\";\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport cn from \"classnames\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst Episode = ({ name, img, summary }) => {\r\n  const exactSummary = summary || \"без описания\";\r\n  const [description, setDescription] = React.useState(\r\n    exactSummary.slice(0, 100)\r\n  );\r\n  const [isRollUp, setIsRollUp] = React.useState(false);\r\n  const toShowRollUpBtn = exactSummary.length > 100;\r\n\r\n  const handleRollUp = () => {\r\n    if (!isRollUp) {\r\n      setDescription(exactSummary);\r\n    } else {\r\n      setDescription(exactSummary.slice(0, 100));\r\n    }\r\n    setIsRollUp(prevIsRollup => !prevIsRollup);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.episodeContainer}>\r\n      <div className={styles.everyEpisode}>\r\n        <img\r\n          className={styles.imageShow}\r\n          src={\r\n            (img && img.medium) ||\r\n            \"https://st2.depositphotos.com/2234823/8317/i/600/depositphotos_83178060-stock-photo-digital-camera.jpg\"\r\n          }\r\n          alt={name}\r\n        />\r\n        <div>{name}</div>\r\n      </div>\r\n      <p className={cn({ [styles.ellips]: !isRollUp })}>\r\n        {description.replace(/<[^>]*>/g, \"\")}\r\n      </p>\r\n      <div className=\"btn\">\r\n        {toShowRollUpBtn && (\r\n          <Button type=\"primary\" onClick={handleRollUp}>\r\n            {isRollUp ? \"Свернуть\" : \"Развернуть\"}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Episode;\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { setEpisodes } from \"../../data/redux/actionCreators\";\r\nimport styles from \"./styles.module.css\";\r\nimport Search from \"../Search\";\r\nimport Episode from \"./Episode\";\r\n\r\nconst Episodes = props => {\r\n  const [error, setError] = React.useState(null);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://api.tvmaze.com/shows/${props.match.params.id}/episodes`\r\n        );\r\n        const items = await response.json();\r\n        props.setEpisodes(items);\r\n\r\n        setIsLoaded(true);\r\n      } catch (error) {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      }\r\n    })();\r\n  }, []);\r\n  console.log(props);\r\n\r\n  if (error) {\r\n    return <p>Error {error.message} </p>;\r\n  } else if (!isLoaded) {\r\n    return <Spin />;\r\n  } else {\r\n    return (\r\n      <div className={styles.episodeContainer}>\r\n        <Search />\r\n        <div>{props.valueFromStore}</div>\r\n        <button onClick={props.changeValue}>Тест</button>\r\n        <div>\r\n          {props.episodes.map(episode => {\r\n            return (\r\n              <Episode\r\n                name={episode.name}\r\n                img={episode.image}\r\n                key={episode.id}\r\n                summary={episode.summary}\r\n              />\r\n            );\r\n          })}\r\n          <div>name</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { episodes } = state;\r\n  return {\r\n    episodes\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setEpisodes: items => dispatch(setEpisodes(items))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Episodes);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../data/redux/store\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./App.css\";\r\nimport TVShows from \"../Components/TVShows\";\r\nimport Episodes from \"../Components/Episodes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <div className=\"content\">\r\n          <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <section className=\"serialList\">\r\n              <Route exact path=\"/\" component={TVShows} />\r\n              <Route path=\"/episodes/:id\" component={Episodes} />\r\n            </section>\r\n          </BrowserRouter>\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"episodeContainer\":\"styles_episodeContainer__5Oi-e\",\"btn\":\"styles_btn__tOM94\",\"imageShow\":\"styles_imageShow__37JwO\",\"ellips\":\"styles_ellips__yiV1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"episodeContainer\":\"styles_episodeContainer__1Pqrq\"};"],"sourceRoot":""}