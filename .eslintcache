[{"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\index.js":"1","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\App\\App.js":"2","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\index.js":"3","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\Serial\\index.js":"4","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\TVShows.js":"5","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\ModalContent\\index.js":"6","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\ModalContent\\ModalContent.js":"7","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Episodes\\index.js":"8","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Episodes\\Episodes.js":"9","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\Serial\\Serial.js":"10","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Episodes\\Episode\\index.js":"11","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Episodes\\Episode\\Episode.js":"12","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Search\\index.js":"13","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Search\\Search.js":"14","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\data\\redux\\store.js":"15","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\data\\redux\\reducer.js":"16","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\data\\redux\\actionCreators.js":"17","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\data\\redux\\actions.js":"18","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\data\\redux\\constants.js":"19"},{"size":178,"mtime":1611569544959,"results":"20","hashOfConfig":"21"},{"size":771,"mtime":1611569544925,"results":"22","hashOfConfig":"21"},{"size":38,"mtime":1611569544950,"results":"23","hashOfConfig":"21"},{"size":37,"mtime":1611569544946,"results":"24","hashOfConfig":"21"},{"size":2686,"mtime":1611569544949,"results":"25","hashOfConfig":"21"},{"size":43,"mtime":1611569544941,"results":"26","hashOfConfig":"21"},{"size":620,"mtime":1611569544939,"results":"27","hashOfConfig":"21"},{"size":39,"mtime":1611569544932,"results":"28","hashOfConfig":"21"},{"size":1922,"mtime":1611569544931,"results":"29","hashOfConfig":"21"},{"size":600,"mtime":1611569544945,"results":"30","hashOfConfig":"21"},{"size":38,"mtime":1611569544929,"results":"31","hashOfConfig":"21"},{"size":1491,"mtime":1611569544927,"results":"32","hashOfConfig":"21"},{"size":37,"mtime":1611569544937,"results":"33","hashOfConfig":"21"},{"size":489,"mtime":1611569544936,"results":"34","hashOfConfig":"21"},{"size":306,"mtime":1611569544956,"results":"35","hashOfConfig":"21"},{"size":205,"mtime":1611569544955,"results":"36","hashOfConfig":"21"},{"size":103,"mtime":1611569544952,"results":"37","hashOfConfig":"21"},{"size":103,"mtime":1611569544953,"results":"38","hashOfConfig":"21"},{"size":37,"mtime":1611569544954,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f79ghd",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\index.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\App\\App.js",[],["82","83"],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\index.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\Serial\\index.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\TVShows.js",["84","85"],"import React from \"react\";\r\nimport { Spin, Modal } from \"antd\";\r\nimport \"./TVShows.css\";\r\nimport Serial from \"./Serial\";\r\nimport Search from \"../Search\";\r\nimport ModalContent from \"./ModalContent\";\r\n\r\nconst TVShows = () => {\r\n  const [error, setError] = React.useState(null);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [items, setItems] = React.useState([]);\r\n  const [filteredItems, setFilteredItems] = React.useState(items);\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [text, setText] = React.useState(\"\");\r\n  const [isModalVisible, setIsModalVisible] = React.useState(false);\r\n  const [currentShow, setCurrentShow] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://api.tvmaze.com/search/shows?q=man\"\r\n        );\r\n        const items = await response.json();\r\n        setItems(items);\r\n        setIsLoaded(true);\r\n        setFilteredItems(items);\r\n      } catch (error) {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const filteredItems = items.filter(i => {\r\n      const lowerName = i.show.name.toLowerCase();\r\n      if (checked && !i.show.image) {\r\n        return;\r\n      }\r\n      return lowerName.includes(text.toLowerCase());\r\n    });\r\n    setFilteredItems(filteredItems);\r\n  }, [checked, text]);\r\n\r\n  const handleFilterByImg = event => setChecked(event.target.checked);\r\n\r\n  const handleFilterByText = event => setText(event.target.value);\r\n\r\n  const handleToggleModal = id => {\r\n    if (id) {\r\n      const currentShow = filteredItems.find(i => i.show.id === id);\r\n      setCurrentShow(currentShow);\r\n    }\r\n    setIsModalVisible(prevIsModalVisible => !prevIsModalVisible);\r\n  };\r\n\r\n  if (error) {\r\n    return <p>Error {error.message} </p>;\r\n  } else if (!isLoaded) {\r\n    return <Spin />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Search\r\n          onChange={handleFilterByText}\r\n          filterByImage={handleFilterByImg}\r\n        />\r\n\r\n        {filteredItems.map(item => {\r\n          return (\r\n            <Serial\r\n              id={item.show.id}\r\n              key={item.show.id}\r\n              name={item.show.name}\r\n              img={item.show.image}\r\n              openModal={handleToggleModal}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <Modal\r\n          title=\"Описание Сериала\"\r\n          visible={isModalVisible}\r\n          onOk={handleToggleModal}\r\n          onCancel={handleToggleModal}\r\n        >\r\n          <ModalContent item={currentShow} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TVShows;\r\n","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\ModalContent\\index.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\ModalContent\\ModalContent.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Episodes\\index.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Episodes\\Episodes.js",["86"],"import React from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { invokeAction1 } from \"../../data/redux/actionCreators\";\r\nimport styles from \"./styles.module.css\";\r\nimport Search from \"../Search\";\r\nimport Episode from \"./Episode\";\r\n\r\nconst Episodes = props => {\r\n  const [error, setError] = React.useState(null);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [items, setItems] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://api.tvmaze.com/shows/${props.match.params.id}/episodes`\r\n        );\r\n        const items = await response.json();\r\n        setItems(items);\r\n        setIsLoaded(true);\r\n      } catch (error) {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <p>Error {error.message} </p>;\r\n  } else if (!isLoaded) {\r\n    return <Spin />;\r\n  } else {\r\n    return (\r\n      <div className={styles.episodeContainer}>\r\n        <Search />\r\n        <div>{props.valueFromStore}</div>\r\n        <button onClick={props.changeValue}>Тест</button>\r\n        <div>\r\n          {items.map(item => {\r\n            return (\r\n              <Episode\r\n                name={item.name}\r\n                img={item.image}\r\n                key={item.id}\r\n                summary={item.summary}\r\n              />\r\n            );\r\n          })}\r\n          <div>name</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { value } = state;\r\n  return { valueFromStore: value };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeValue: () => dispatch(invokeAction1()),\r\n    decrement: () => dispatch({ type: \"DECREMENT\" }),\r\n    reset: () => dispatch({ type: \"RESET\" })\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Episodes);\r\n","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\TVShows\\Serial\\Serial.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Episodes\\Episode\\index.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Episodes\\Episode\\Episode.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Search\\index.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\Components\\Search\\Search.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\data\\redux\\store.js",["87"],"import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\data\\redux\\reducer.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\data\\redux\\actionCreators.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\data\\redux\\actions.js",[],"C:\\Users\\Slava\\Desktop\\index\\my-app\\src\\data\\redux\\constants.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":39,"column":9,"nodeType":"94","messageId":"95","endLine":39,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":44,"column":6,"nodeType":"98","endLine":44,"endColumn":21,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":28,"column":6,"nodeType":"98","endLine":28,"endColumn":8,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":23,"nodeType":"104","messageId":"105","endLine":1,"endColumn":30},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook React.useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["109"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [checked, items, text]",{"range":"114","text":"115"},"Update the dependencies array to be: [props.match.params.id]",{"range":"116","text":"117"},[1394,1409],"[checked, items, text]",[855,857],"[props.match.params.id]"]